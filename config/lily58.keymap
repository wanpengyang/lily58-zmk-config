/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BT0     BT_SEL 0
#define BT1     BT_SEL 1
#define BT2     BT_SEL 2
#define BT3     BT_SEL 3
#define BT4     BT_SEL 4

/ {
    macros {
        caps_macro: caps_macro {
            compatible = "zmk,behavior-macro";
            label = "caps_macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <200>;
            bindings = <&kp CAPS>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            require-prior-idle-ms = <125>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td_caps: tap_dance_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&caps_macro>;
        };

        hl: homerow_layertap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            require-prior-idle-ms = <125>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <38 37>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <38 39>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <39 40>;
        };

        clipboard_history {
            bindings = <&kp LG(LA(V))>;
            key-positions = <40 41>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <45 46>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <46 47>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <19 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <20 21>;
        };

        raycast {
            bindings = <&kp RG(RA(SPACE))>;
            key-positions = <31 32 33>;
        };

        screenshot {
            bindings = <&kp LS(LG(NUMBER_4))>;
            key-positions = <3 4>;
        };

        screenrecord {
            bindings = <&kp LS(LG(N5))>;
            key-positions = <4 5>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <44 45>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <33 34>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <47 48>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp ESC    &kp N1  &kp N2       &kp N3         &kp N4       &kp N5                                           &kp N6           &kp N7        &kp N8      &kp N9       &kp N0    &kp BACKSPACE
&kp TAB    &kp Q   &kp W        &kp E          &kp R        &kp T                                            &kp Y            &kp U         &kp I       &kp O        &kp P     &kp BSLH
&kp GRAVE  &kp A   &hm LCTRL S  &hm LALT D     &hm LGUI F   &hl 2 G                                          &hl 2 H          &hm RGUI J    &hm RALT K  &hm RCTRL L  &kp SEMI  &kp SQT
&td_caps   &kp Z   &kp X        &kp C          &kp V        &kp B      &kp LC(LEFT)        &kp RC(RIGHT)     &kp N            &kp M         &kp COMMA   &kp DOT      &kp FSLH  &ht RSHFT ENTER
                                &kp LC(SPACE)  &lt 2 LG(B)  &lt 1 TAB  &ht LSHIFT ENTER    &ht RSHIFT SPACE  &lt 1 LG(RIGHT)  &lt 2 DELETE  &mo 3
            >;
        };

        lower_layer {
            display-name = "Lower";
            bindings = <
&trans     &trans    &trans  &trans     &trans      &trans                                   &trans     &trans    &trans     &trans            &trans     &kp F11
&trans     &kp EXCL  &kp AT  &kp POUND  &kp DOLLAR  &kp PERCENT                              &kp CARET  &kp AMPS  &kp STAR   &kp LPAR          &kp RPAR   &kp PIPE
&kp TILDE  &kp N1    &kp N2  &kp N3     &kp N4      &kp N5                                   &kp LBKT   &kp RBKT  &kp LT     &kp GREATER_THAN  &kp COLON  &kp DQT
&trans     &kp N6    &kp N7  &kp N8     &kp N9      &kp N0       &kp LC(UP)    &kp LC(DOWN)  &kp LBRC   &kp RBRC  &kp COMMA  &kp DOT           &kp QMARK  &trans
                             &trans     &trans      &trans       &trans        &trans        &trans     &trans    &trans
            >;
        };

        raise_layer {
            display-name = " Raise";
            bindings = <
&trans  &trans  &trans                &trans             &kp LG(LS(N4))         &kp LG(LS(N5))                                                       &trans            &trans             &trans             &kp C_BRI_DN  &kp C_BRI_UP  &kp C_VOL_UP
&trans  &trans  &kp LG(LC(LA(LEFT)))  &kp LC(TAB)        &kp LA(LC(LG(RIGHT)))  &trans                                                               &kp HOME          &kp PG_DN          &kp PAGE_UP        &kp END       &trans        &kp C_VOL_DN
&trans  &trans  &kp LA(LC(LEFT))      &kp LC(LA(ENTER))  &kp LA(LC(RIGHT))      &trans                                                               &kp LEFT          &kp DOWN           &kp UP             &kp RIGHT     &kp UP        &kp C_MUTE
&trans  &trans  &kp LA(LC(LG(X)))     &kp LS(LC(TAB))    &kp LA(LC(LG(V)))      &trans          &kp LG(LA(LC(LEFT_ARROW)))    &kp LG(LA(LC(RIGHT)))  &kp LA(LC(LEFT))  &kp LA(LC(ENTER))  &kp RA(RC(RIGHT))  &kp LEFT      &kp DOWN      &kp RIGHT
                                      &trans             &trans                 &trans          &trans                        &trans                 &trans            &trans             &trans
            >;
        };

        bt_layer {
            display-name = "BLE";
            bindings = <
&bt BT0      &bt BT1     &bt BT2  &bt BT3  &bt BT4  &none                             &bt BT0  &bt BT1  &bt BT2  &bt BT3   &bt BT4     &none
&bootloader  &sys_reset  &none    &none    &none    &none                             &none    &none    &none    &none     &sys_reset  &bootloader
&none        &none       &none    &none    &none    &none                             &none    &none    &none    &none     &kp UP      &none
&none        &none       &none    &none    &none    &none   &bt BT_CLR    &bt BT_CLR  &none    &none    &none    &kp LEFT  &kp DOWN    &kp RIGHT
                                  &none    &none    &trans  &trans        &trans      &trans   &none    &none
            >;
        };
    };
};
